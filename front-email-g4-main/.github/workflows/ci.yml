# CI (Continuous Integration) pipeline
# for building and pushing a Docker image to a container registry.

# The pipeline is triggered on every push to the 'main' branch
#of the repository.

name: CI Pipeline

on:
  push:
    branches:
      - main

# Environment variables used in the pipeline.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# Jobs defined in the pipeline.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    # Permissions required for the job.
    permissions:
      contents: read
      packages: write

    # Steps to be executed in the job.
    steps:
      # Step 1: Set short git commit SHA
      # This step uses the 'prompt/actions-commit-hash'
      # action to set the short SHA of the current git commit.

      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v3

      # Step 2: Checkout repository
      # This step uses the 'actions/checkout'
      # action to checkout the repository code.

      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 3: Set up Docker Buildx
      # This step uses the 'docker/setup-buildx-action'
      # action to set up Docker Buildx.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Log in to the Container registry
      # This step uses the 'docker/login-action' action to log
      #in to the specified container registry using the provided credentials.

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Extract metadata (tags, labels) for Docker
      # This step uses the 'docker/metadata-action' action to extract
      # metadata such as tags and labels for the Docker image.

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        env:
          SHORT_SHA: ${{ steps.commit.outputs.short }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.commit.outputs.short }}

      # Step 6: Build, tag and push Docker image
      # This step uses the 'docker/build-push-action' action to build,
      # tag, and push the Docker image to the specified container registry.

      - name: Build, tag and push Docker image
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
